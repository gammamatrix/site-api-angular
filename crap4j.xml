<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2024-07-25 18:14:39</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>442</methodCount>
    <crapMethodCount>12</crapMethodCount>
    <crapLoad>199</crapLoad>
    <totalCrap>6425.82</totalCrap>
    <crapMethodPercent>2.71</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\LoginController</className>
      <methodName>authenticate</methodName>
      <methodSignature>authenticate(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>authenticate(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\LoginController</className>
      <methodName>logout</methodName>
      <methodSignature>logout(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>logout(Illuminate\Http\Request $request): \Illuminate\Http\JsonResponse|\Illuminate\Http\RedirectResponse</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\LoginController</className>
      <methodName>destroyTokens</methodName>
      <methodSignature>destroyTokens(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Http\Request $request): void</methodSignature>
      <fullMethod>destroyTokens(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Http\Request $request): void</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\LoginController</className>
      <methodName>token</methodName>
      <methodSignature>token(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>token(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>matches</methodName>
      <methodSignature>matches(?Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>matches(?Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>init</methodName>
      <methodSignature>init(?Illuminate\Contracts\Auth\Authenticatable $user): self</methodSignature>
      <fullMethod>init(?Illuminate\Contracts\Auth\Authenticatable $user): self</fullMethod>
      <crap>210</crap>
      <complexity>14</complexity>
      <coverage>0</coverage>
      <crapLoad>14</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>reset</methodName>
      <methodSignature>reset(?Illuminate\Contracts\Auth\Authenticatable $user): self</methodSignature>
      <fullMethod>reset(?Illuminate\Contracts\Auth\Authenticatable $user): self</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>isGuest</methodName>
      <methodSignature>isGuest(?Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>isGuest(?Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>map</methodName>
      <methodSignature>map(array $privileges, ?Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>map(array $privileges, ?Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>wildcards</methodName>
      <methodSignature>wildcards(string $privilege): array</methodSignature>
      <fullMethod>wildcards(string $privilege): array</fullMethod>
      <crap>110</crap>
      <complexity>10</complexity>
      <coverage>0</coverage>
      <crapLoad>10</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>access</methodName>
      <methodSignature>access(?Illuminate\Contracts\Auth\Authenticatable $user, array $options): Playground\Auth\Permission</methodSignature>
      <fullMethod>access(?Illuminate\Contracts\Auth\Authenticatable $user, array $options): Playground\Auth\Permission</fullMethod>
      <crap>2450</crap>
      <complexity>49</complexity>
      <coverage>0</coverage>
      <crapLoad>50</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Can</className>
      <methodName>withPrivilege</methodName>
      <methodSignature>withPrivilege(array $meta): string</methodSignature>
      <fullMethod>withPrivilege(array $meta): string</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Console\Commands</package>
      <className>Playground\Auth\Console\Commands\HashPassword</className>
      <methodName>handle</methodName>
      <methodSignature>handle()</methodSignature>
      <fullMethod>handle()</fullMethod>
      <crap>9.02</crap>
      <complexity>9</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Facades</package>
      <className>Playground\Auth\Facades\Can</className>
      <methodName>getFacadeAccessor</methodName>
      <methodSignature>getFacadeAccessor()</methodSignature>
      <fullMethod>getFacadeAccessor()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>useSanctum</methodName>
      <methodSignature>useSanctum(): bool</methodSignature>
      <fullMethod>useSanctum(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>compileAbilitiesByGroup</methodName>
      <methodSignature>compileAbilitiesByGroup(string $group): array</methodSignature>
      <fullMethod>compileAbilitiesByGroup(string $group): array</fullMethod>
      <crap>812</crap>
      <complexity>28</complexity>
      <coverage>0</coverage>
      <crapLoad>29</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>abilitiesByGroup</methodName>
      <methodSignature>abilitiesByGroup(string $group): array</methodSignature>
      <fullMethod>abilitiesByGroup(string $group): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>abilities</methodName>
      <methodSignature>abilities(Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>abilities(Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>156</crap>
      <complexity>12</complexity>
      <coverage>0</coverage>
      <crapLoad>12</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>init</methodName>
      <methodSignature>init(Illuminate\Contracts\Auth\Authenticatable $user): self</methodSignature>
      <fullMethod>init(Illuminate\Contracts\Auth\Authenticatable $user): self</fullMethod>
      <crap>462</crap>
      <complexity>21</complexity>
      <coverage>0</coverage>
      <crapLoad>21</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>listed</methodName>
      <methodSignature>listed(Illuminate\Contracts\Auth\Authenticatable $user): void</methodSignature>
      <fullMethod>listed(Illuminate\Contracts\Auth\Authenticatable $user): void</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>authorize(Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Issuer</className>
      <methodName>sanctum</methodName>
      <methodSignature>sanctum(Illuminate\Contracts\Auth\Authenticatable $user): array</methodSignature>
      <fullMethod>sanctum(Illuminate\Contracts\Auth\Authenticatable $user): array</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $verify)</methodSignature>
      <fullMethod>__construct(string $verify)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>markAllowed</methodName>
      <methodSignature>markAllowed(): self</methodSignature>
      <fullMethod>markAllowed(): self</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>markIsGuest</methodName>
      <methodSignature>markIsGuest(): self</methodSignature>
      <fullMethod>markIsGuest(): self</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>allowed</methodName>
      <methodSignature>allowed(): bool</methodSignature>
      <fullMethod>allowed(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\Permission</className>
      <methodName>isGuest</methodName>
      <methodSignature>isGuest(): bool</methodSignature>
      <fullMethod>isGuest(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>create</methodName>
      <methodSignature>create(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>create(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>delete</methodName>
      <methodSignature>delete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>delete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>detail</methodName>
      <methodSignature>detail(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>detail(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>edit</methodName>
      <methodSignature>edit(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>edit(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>forceDelete</methodName>
      <methodSignature>forceDelete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>forceDelete(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>lock</methodName>
      <methodSignature>lock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>lock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>manage</methodName>
      <methodSignature>manage(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>manage(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>restore</methodName>
      <methodSignature>restore(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>restore(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>store(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>update(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\ModelPolicy</className>
      <methodName>unlock</methodName>
      <methodSignature>unlock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>unlock(Illuminate\Contracts\Auth\Authenticatable $user, Illuminate\Database\Eloquent\Model $model): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>before</methodName>
      <methodSignature>before(Illuminate\Contracts\Auth\Authenticatable $user, $ability)</methodSignature>
      <fullMethod>before(Illuminate\Contracts\Auth\Authenticatable $user, $ability)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>index(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\Policy</className>
      <methodName>view</methodName>
      <methodSignature>view(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>view(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>privilege</methodName>
      <methodSignature>privilege(string $ability): string</methodSignature>
      <fullMethod>privilege(string $ability): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getEntity</methodName>
      <methodSignature>getEntity(): string</methodSignature>
      <fullMethod>getEntity(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getPackage</methodName>
      <methodSignature>getPackage(): string</methodSignature>
      <fullMethod>getPackage(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>hasToken</methodName>
      <methodSignature>hasToken(): bool</methodSignature>
      <fullMethod>hasToken(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>getToken</methodName>
      <methodSignature>getToken(): ?Laravel\Sanctum\PersonalAccessToken</methodSignature>
      <fullMethod>getToken(): ?Laravel\Sanctum\PersonalAccessToken</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>setToken</methodName>
      <methodSignature>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</methodSignature>
      <fullMethod>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PolicyTrait</className>
      <methodName>verify</methodName>
      <methodSignature>verify(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>verify(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>8.01</crap>
      <complexity>8</complexity>
      <coverage>94.12</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getPackage</methodName>
      <methodSignature>getPackage(): string</methodSignature>
      <fullMethod>getPackage(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getEntity</methodName>
      <methodSignature>getEntity(): string</methodSignature>
      <fullMethod>getEntity(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>getToken</methodName>
      <methodSignature>getToken(): ?Laravel\Sanctum\PersonalAccessToken</methodSignature>
      <fullMethod>getToken(): ?Laravel\Sanctum\PersonalAccessToken</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasToken</methodName>
      <methodSignature>hasToken(): bool</methodSignature>
      <fullMethod>hasToken(): bool</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>setToken</methodName>
      <methodSignature>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</methodSignature>
      <fullMethod>setToken(Laravel\Sanctum\PersonalAccessToken $token): self</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>privilege</methodName>
      <methodSignature>privilege(string $ability): string</methodSignature>
      <fullMethod>privilege(string $ability): string</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilegeWildcard</methodName>
      <methodSignature>hasPrivilegeWildcard(string $privilege): bool</methodSignature>
      <fullMethod>hasPrivilegeWildcard(string $privilege): bool</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilege(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>11.06</crap>
      <complexity>11</complexity>
      <coverage>92.31</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\PrivilegeTrait</className>
      <methodName>hasPrivilegeSanctum</methodName>
      <methodSignature>hasPrivilegeSanctum(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasPrivilegeSanctum(Illuminate\Contracts\Auth\Authenticatable $user, string $privilege): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>120.55</crap>
      <complexity>16</complexity>
      <coverage>25.81</coverage>
      <crapLoad>12</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesForAdmin</methodName>
      <methodSignature>getRolesForAdmin(): array</methodSignature>
      <fullMethod>getRolesForAdmin(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesForAction</methodName>
      <methodSignature>getRolesForAction(): array</methodSignature>
      <fullMethod>getRolesForAction(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>isRoot</methodName>
      <methodSignature>isRoot(Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>isRoot(Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>getRolesToView</methodName>
      <methodSignature>getRolesToView(): array</methodSignature>
      <fullMethod>getRolesToView(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth\Policies</package>
      <className>Playground\Auth\Policies\RoleTrait</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>hasRole(Illuminate\Contracts\Auth\Authenticatable $user, string $ability): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>18</crap>
      <complexity>18</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>49.15</crap>
      <complexity>48</complexity>
      <coverage>92.06</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Auth</package>
      <className>Playground\Auth\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>create</methodName>
      <methodSignature>create(Playground\Cms\Api\Http\Requests\Page\CreateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>create(Playground\Cms\Api\Http\Requests\Page\CreateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\EditRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>edit(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\EditRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\DestroyRequest $request): Illuminate\Http\Response</methodSignature>
      <fullMethod>destroy(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\DestroyRequest $request): Illuminate\Http\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>lock</methodName>
      <methodSignature>lock(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\LockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>lock(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\LockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>index</methodName>
      <methodSignature>index(Playground\Cms\Api\Http\Requests\Page\IndexRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\PageCollection</methodSignature>
      <fullMethod>index(Playground\Cms\Api\Http\Requests\Page\IndexRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\PageCollection</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>restore</methodName>
      <methodSignature>restore(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\RestoreRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>restore(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\RestoreRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>restoreRevision</methodName>
      <methodSignature>restoreRevision(Playground\Cms\Models\PageRevision $page_revision, Playground\Cms\Api\Http\Requests\Page\RestoreRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>restoreRevision(Playground\Cms\Models\PageRevision $page_revision, Playground\Cms\Api\Http\Requests\Page\RestoreRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>revision</methodName>
      <methodSignature>revision(Playground\Cms\Models\PageRevision $page_revision, Playground\Cms\Api\Http\Requests\Page\ShowRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\PageRevision</methodSignature>
      <fullMethod>revision(Playground\Cms\Models\PageRevision $page_revision, Playground\Cms\Api\Http\Requests\Page\ShowRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\PageRevision</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>revisions</methodName>
      <methodSignature>revisions(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\RevisionsRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\PageRevisionCollection</methodSignature>
      <fullMethod>revisions(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\RevisionsRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\PageRevisionCollection</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>saveRevision</methodName>
      <methodSignature>saveRevision(Playground\Cms\Models\Page $page): Playground\Cms\Models\PageRevision</methodSignature>
      <fullMethod>saveRevision(Playground\Cms\Models\Page $page): Playground\Cms\Models\PageRevision</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>show</methodName>
      <methodSignature>show(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\ShowRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>show(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\ShowRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>store</methodName>
      <methodSignature>store(Playground\Cms\Api\Http\Requests\Page\StoreRequest $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>store(Playground\Cms\Api\Http\Requests\Page\StoreRequest $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>unlock</methodName>
      <methodSignature>unlock(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\UnlockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>unlock(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\UnlockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\PageController</className>
      <methodName>update</methodName>
      <methodSignature>update(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\UpdateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</methodSignature>
      <fullMethod>update(Playground\Cms\Models\Page $page, Playground\Cms\Api\Http\Requests\Page\UpdateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Page</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>create</methodName>
      <methodSignature>create(Playground\Cms\Api\Http\Requests\Snippet\CreateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>create(Playground\Cms\Api\Http\Requests\Snippet\CreateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\EditRequest $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>edit(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\EditRequest $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\DestroyRequest $request): Illuminate\Http\Response</methodSignature>
      <fullMethod>destroy(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\DestroyRequest $request): Illuminate\Http\Response</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>lock</methodName>
      <methodSignature>lock(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\LockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>lock(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\LockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>index</methodName>
      <methodSignature>index(Playground\Cms\Api\Http\Requests\Snippet\IndexRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\SnippetCollection</methodSignature>
      <fullMethod>index(Playground\Cms\Api\Http\Requests\Snippet\IndexRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\SnippetCollection</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>restore</methodName>
      <methodSignature>restore(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\RestoreRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>restore(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\RestoreRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>restoreRevision</methodName>
      <methodSignature>restoreRevision(Playground\Cms\Models\SnippetRevision $snippet_revision, Playground\Cms\Api\Http\Requests\Snippet\RestoreRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>restoreRevision(Playground\Cms\Models\SnippetRevision $snippet_revision, Playground\Cms\Api\Http\Requests\Snippet\RestoreRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>revision</methodName>
      <methodSignature>revision(Playground\Cms\Models\SnippetRevision $snippet_revision, Playground\Cms\Api\Http\Requests\Snippet\ShowRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\SnippetRevision</methodSignature>
      <fullMethod>revision(Playground\Cms\Models\SnippetRevision $snippet_revision, Playground\Cms\Api\Http\Requests\Snippet\ShowRevisionRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\SnippetRevision</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>revisions</methodName>
      <methodSignature>revisions(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\RevisionsRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\SnippetRevisionCollection</methodSignature>
      <fullMethod>revisions(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\RevisionsRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\SnippetRevisionCollection</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>saveRevision</methodName>
      <methodSignature>saveRevision(Playground\Cms\Models\Snippet $snippet): Playground\Cms\Models\SnippetRevision</methodSignature>
      <fullMethod>saveRevision(Playground\Cms\Models\Snippet $snippet): Playground\Cms\Models\SnippetRevision</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>show</methodName>
      <methodSignature>show(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\ShowRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>show(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\ShowRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>store</methodName>
      <methodSignature>store(Playground\Cms\Api\Http\Requests\Snippet\StoreRequest $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>store(Playground\Cms\Api\Http\Requests\Snippet\StoreRequest $request): \Illuminate\Http\Response|\Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>unlock</methodName>
      <methodSignature>unlock(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\UnlockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>unlock(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\UnlockRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Controllers</package>
      <className>Playground\Cms\Api\Http\Controllers\SnippetController</className>
      <methodName>update</methodName>
      <methodSignature>update(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\UpdateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</methodSignature>
      <fullMethod>update(Playground\Cms\Models\Snippet $snippet, Playground\Cms\Api\Http\Requests\Snippet\UpdateRequest $request): \Illuminate\Http\JsonResponse|\Playground\Cms\Api\Http\Resources\Snippet</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests</package>
      <className>Playground\Cms\Api\Http\Requests\FormRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests</package>
      <className>Playground\Cms\Api\Http\Requests\FormRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests</package>
      <className>Playground\Cms\Api\Http\Requests\FormRequest</className>
      <methodName>userHasAdminPrivileges</methodName>
      <methodSignature>userHasAdminPrivileges(Illuminate\Contracts\Auth\Authenticatable $user): bool</methodSignature>
      <fullMethod>userHasAdminPrivileges(Illuminate\Contracts\Auth\Authenticatable $user): bool</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Page</package>
      <className>Playground\Cms\Api\Http\Requests\Page\DestroyRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Page</package>
      <className>Playground\Cms\Api\Http\Requests\Page\StoreRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Page</package>
      <className>Playground\Cms\Api\Http\Requests\Page\StoreRequest</className>
      <methodName>prepareForValidation</methodName>
      <methodSignature>prepareForValidation()</methodSignature>
      <fullMethod>prepareForValidation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Page</package>
      <className>Playground\Cms\Api\Http\Requests\Page\UpdateRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Page</package>
      <className>Playground\Cms\Api\Http\Requests\Page\UpdateRequest</className>
      <methodName>prepareForValidation</methodName>
      <methodSignature>prepareForValidation()</methodSignature>
      <fullMethod>prepareForValidation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Snippet</package>
      <className>Playground\Cms\Api\Http\Requests\Snippet\DestroyRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Snippet</package>
      <className>Playground\Cms\Api\Http\Requests\Snippet\StoreRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Snippet</package>
      <className>Playground\Cms\Api\Http\Requests\Snippet\StoreRequest</className>
      <methodName>prepareForValidation</methodName>
      <methodSignature>prepareForValidation()</methodSignature>
      <fullMethod>prepareForValidation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Snippet</package>
      <className>Playground\Cms\Api\Http\Requests\Snippet\UpdateRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Requests\Snippet</package>
      <className>Playground\Cms\Api\Http\Requests\Snippet\UpdateRequest</className>
      <methodName>prepareForValidation</methodName>
      <methodSignature>prepareForValidation()</methodSignature>
      <fullMethod>prepareForValidation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\Page</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\PageCollection</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\PageRevision</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\PageRevisionCollection</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\Snippet</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\SnippetCollection</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\SnippetRevision</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Http\Resources</package>
      <className>Playground\Cms\Api\Http\Resources\SnippetRevisionCollection</className>
      <methodName>with</methodName>
      <methodSignature>with(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>with(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Policies</package>
      <className>Playground\Cms\Api\Policies\PagePolicy</className>
      <methodName>revisions</methodName>
      <methodSignature>revisions(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>revisions(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Policies</package>
      <className>Playground\Cms\Api\Policies\PagePolicy</className>
      <methodName>viewRevision</methodName>
      <methodSignature>viewRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\PageRevision $page_revision): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>viewRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\PageRevision $page_revision): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Policies</package>
      <className>Playground\Cms\Api\Policies\PagePolicy</className>
      <methodName>restoreRevision</methodName>
      <methodSignature>restoreRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\PageRevision $page_revision): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>restoreRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\PageRevision $page_revision): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Policies</package>
      <className>Playground\Cms\Api\Policies\SnippetPolicy</className>
      <methodName>revisions</methodName>
      <methodSignature>revisions(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>revisions(Illuminate\Contracts\Auth\Authenticatable $user): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Policies</package>
      <className>Playground\Cms\Api\Policies\SnippetPolicy</className>
      <methodName>viewRevision</methodName>
      <methodSignature>viewRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\SnippetRevision $snippet_revision): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>viewRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\SnippetRevision $snippet_revision): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api\Policies</package>
      <className>Playground\Cms\Api\Policies\SnippetPolicy</className>
      <methodName>restoreRevision</methodName>
      <methodSignature>restoreRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\SnippetRevision $snippet_revision): bool|\Illuminate\Auth\Access\Response</methodSignature>
      <fullMethod>restoreRevision(Illuminate\Contracts\Auth\Authenticatable $user, Playground\Cms\Models\SnippetRevision $snippet_revision): bool|\Illuminate\Auth\Access\Response</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api</package>
      <className>Playground\Cms\Api\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>11</crap>
      <complexity>11</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api</package>
      <className>Playground\Cms\Api\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api</package>
      <className>Playground\Cms\Api\ServiceProvider</className>
      <methodName>setPolicies</methodName>
      <methodSignature>setPolicies(array $policies): void</methodSignature>
      <fullMethod>setPolicies(array $policies): void</fullMethod>
      <crap>10</crap>
      <complexity>10</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api</package>
      <className>Playground\Cms\Api\ServiceProvider</className>
      <methodName>routes</methodName>
      <methodSignature>routes(array $config): void</methodSignature>
      <fullMethod>routes(array $config): void</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api</package>
      <className>Playground\Cms\Api\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>18</crap>
      <complexity>18</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Api</package>
      <className>Playground\Cms\Api\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\Page</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\Page</className>
      <methodName>revisions</methodName>
      <methodSignature>revisions(): Illuminate\Database\Eloquent\Relations\HasMany</methodSignature>
      <fullMethod>revisions(): Illuminate\Database\Eloquent\Relations\HasMany</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\PageRevision</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\PageRevision</className>
      <methodName>page</methodName>
      <methodSignature>page(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>page(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\Snippet</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\Snippet</className>
      <methodName>revisions</methodName>
      <methodSignature>revisions(): Illuminate\Database\Eloquent\Relations\HasMany</methodSignature>
      <fullMethod>revisions(): Illuminate\Database\Eloquent\Relations\HasMany</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\SnippetRevision</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms\Models</package>
      <className>Playground\Cms\Models\SnippetRevision</className>
      <methodName>snippet</methodName>
      <methodSignature>snippet(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>snippet(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms</package>
      <className>Playground\Cms\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms</package>
      <className>Playground\Cms\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms</package>
      <className>Playground\Cms\ServiceProvider</className>
      <methodName>publishMigrations</methodName>
      <methodSignature>publishMigrations(): void</methodSignature>
      <fullMethod>publishMigrations(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Cms</package>
      <className>Playground\Cms\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationColumns</className>
      <methodName>getPaginationColumns</methodName>
      <methodSignature>getPaginationColumns(): array</methodSignature>
      <fullMethod>getPaginationColumns(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationColumns</className>
      <methodName>rules_filters_columns</methodName>
      <methodSignature>rules_filters_columns(array $rules): void</methodSignature>
      <fullMethod>rules_filters_columns(array $rules): void</fullMethod>
      <crap>15.48</crap>
      <complexity>15</complexity>
      <coverage>87.1</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationDates</className>
      <methodName>getPaginationDates</methodName>
      <methodSignature>getPaginationDates(): array</methodSignature>
      <fullMethod>getPaginationDates(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationDates</className>
      <methodName>rules_filters_dates</methodName>
      <methodSignature>rules_filters_dates(array $rules): void</methodSignature>
      <fullMethod>rules_filters_dates(array $rules): void</fullMethod>
      <crap>4.13</crap>
      <complexity>4</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationDates</className>
      <methodName>prepareForValidationForDates</methodName>
      <methodSignature>prepareForValidationForDates(): ?array</methodSignature>
      <fullMethod>prepareForValidationForDates(): ?array</fullMethod>
      <crap>23.2</crap>
      <complexity>20</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationFlags</className>
      <methodName>getPaginationFlags</methodName>
      <methodSignature>getPaginationFlags(): array</methodSignature>
      <fullMethod>getPaginationFlags(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationFlags</className>
      <methodName>rules_filters_flags</methodName>
      <methodSignature>rules_filters_flags(array $rules): void</methodSignature>
      <fullMethod>rules_filters_flags(array $rules): void</fullMethod>
      <crap>8.63</crap>
      <complexity>8</complexity>
      <coverage>78.57</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationIds</className>
      <methodName>getPaginationIds</methodName>
      <methodSignature>getPaginationIds(): array</methodSignature>
      <fullMethod>getPaginationIds(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationIds</className>
      <methodName>rules_filters_ids</methodName>
      <methodSignature>rules_filters_ids(array $rules): void</methodSignature>
      <fullMethod>rules_filters_ids(array $rules): void</fullMethod>
      <crap>4.13</crap>
      <complexity>4</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationIds</className>
      <methodName>prepareForValidationIds</methodName>
      <methodSignature>prepareForValidationIds(): array</methodSignature>
      <fullMethod>prepareForValidationIds(): array</fullMethod>
      <crap>380</crap>
      <complexity>19</complexity>
      <coverage>0</coverage>
      <crapLoad>19</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationOperators</className>
      <methodName>getPaginationOperators</methodName>
      <methodSignature>getPaginationOperators(): array</methodSignature>
      <fullMethod>getPaginationOperators(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationSortable</className>
      <methodName>getSortable</methodName>
      <methodSignature>getSortable(): array</methodSignature>
      <fullMethod>getSortable(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationSortable</className>
      <methodName>rules_sortable</methodName>
      <methodSignature>rules_sortable(array $rules): void</methodSignature>
      <fullMethod>rules_sortable(array $rules): void</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\PaginationSortable</className>
      <methodName>prepareForValidationSort</methodName>
      <methodSignature>prepareForValidationSort(): array</methodSignature>
      <fullMethod>prepareForValidationSort(): array</fullMethod>
      <crap>4.77</crap>
      <complexity>4</complexity>
      <coverage>63.64</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreContent</className>
      <methodName>exorcise</methodName>
      <methodSignature>exorcise(mixed $content): string</methodSignature>
      <fullMethod>exorcise(mixed $content): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreContent</className>
      <methodName>purify</methodName>
      <methodSignature>purify(mixed $content): string</methodSignature>
      <fullMethod>purify(mixed $content): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreContent</className>
      <methodName>getHtmlPurifier</methodName>
      <methodSignature>getHtmlPurifier(array $config): HTMLPurifier</methodSignature>
      <fullMethod>getHtmlPurifier(array $config): HTMLPurifier</fullMethod>
      <crap>13</crap>
      <complexity>13</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterArray</methodName>
      <methodSignature>filterArray(mixed $value): array</methodSignature>
      <fullMethod>filterArray(mixed $value): array</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterArrayToJson</methodName>
      <methodSignature>filterArrayToJson(mixed $value): string|false</methodSignature>
      <fullMethod>filterArrayToJson(mixed $value): string|false</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterBits</methodName>
      <methodSignature>filterBits($value, $exponent): int</methodSignature>
      <fullMethod>filterBits($value, $exponent): int</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterBoolean</methodName>
      <methodSignature>filterBoolean(mixed $value): bool</methodSignature>
      <fullMethod>filterBoolean(mixed $value): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterDate</methodName>
      <methodSignature>filterDate(mixed $value, $locale): ?string</methodSignature>
      <fullMethod>filterDate(mixed $value, $locale): ?string</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterDateAsCarbon</methodName>
      <methodSignature>filterDateAsCarbon($value, $locale): ?Illuminate\Support\Carbon</methodSignature>
      <fullMethod>filterDateAsCarbon($value, $locale): ?Illuminate\Support\Carbon</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterEmail</methodName>
      <methodSignature>filterEmail(mixed $email): string</methodSignature>
      <fullMethod>filterEmail(mixed $email): string</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterFloat</methodName>
      <methodSignature>filterFloat(mixed $value, $locale): ?float</methodSignature>
      <fullMethod>filterFloat(mixed $value, $locale): ?float</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterHtml</methodName>
      <methodSignature>filterHtml(mixed $content): string</methodSignature>
      <fullMethod>filterHtml(mixed $content): string</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterInteger</methodName>
      <methodSignature>filterInteger(mixed $value, $locale): int</methodSignature>
      <fullMethod>filterInteger(mixed $value, $locale): int</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterIntegerId</methodName>
      <methodSignature>filterIntegerId(mixed $value): ?int</methodSignature>
      <fullMethod>filterIntegerId(mixed $value): ?int</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterIntegerPositive</methodName>
      <methodSignature>filterIntegerPositive(mixed $value, $absolute): int</methodSignature>
      <fullMethod>filterIntegerPositive(mixed $value, $absolute): int</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterPercent</methodName>
      <methodSignature>filterPercent(mixed $value, $locale): ?float</methodSignature>
      <fullMethod>filterPercent(mixed $value, $locale): ?float</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterPhone</methodName>
      <methodSignature>filterPhone(mixed $value, string $locale): string</methodSignature>
      <fullMethod>filterPhone(mixed $value, string $locale): string</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>97.56</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterStatus</methodName>
      <methodSignature>filterStatus(array $input): void</methodSignature>
      <fullMethod>filterStatus(array $input): void</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterCommonFields</methodName>
      <methodSignature>filterCommonFields(array $input): void</methodSignature>
      <fullMethod>filterCommonFields(array $input): void</fullMethod>
      <crap>9.02</crap>
      <complexity>9</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterContentFields</methodName>
      <methodSignature>filterContentFields(array $input): void</methodSignature>
      <fullMethod>filterContentFields(array $input): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterSystemFields</methodName>
      <methodSignature>filterSystemFields(array $input): void</methodSignature>
      <fullMethod>filterSystemFields(array $input): void</fullMethod>
      <crap>19</crap>
      <complexity>19</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterUri</methodName>
      <methodSignature>filterUri(mixed $value): string</methodSignature>
      <fullMethod>filterUri(mixed $value): string</fullMethod>
      <crap>6</crap>
      <complexity>4</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreFilter</className>
      <methodName>filterUuid</methodName>
      <methodSignature>filterUuid(mixed $value): ?string</methodSignature>
      <fullMethod>filterUuid(mixed $value): ?string</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreSlug</className>
      <methodName>rules_store_slug_create</methodName>
      <methodSignature>rules_store_slug_create(array $rules): void</methodSignature>
      <fullMethod>rules_store_slug_create(array $rules): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreSlug</className>
      <methodName>rules_store_slug_update</methodName>
      <methodSignature>rules_store_slug_update(array $rules): void</methodSignature>
      <fullMethod>rules_store_slug_update(array $rules): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests\Concerns</package>
      <className>Playground\Http\Requests\Concerns\StoreSlug</className>
      <methodName>prepareForValidationForSlug</methodName>
      <methodSignature>prepareForValidationForSlug(): array</methodSignature>
      <fullMethod>prepareForValidationForSlug(): array</fullMethod>
      <crap>17.48</crap>
      <complexity>14</complexity>
      <coverage>73.91</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\FormRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\FormRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\IndexRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\IndexRequest</className>
      <methodName>rules_filters</methodName>
      <methodSignature>rules_filters(array $rules): void</methodSignature>
      <fullMethod>rules_filters(array $rules): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\IndexRequest</className>
      <methodName>prepareForValidation</methodName>
      <methodSignature>prepareForValidation(): void</methodSignature>
      <fullMethod>prepareForValidation(): void</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\IndexRequest</className>
      <methodName>passedValidation</methodName>
      <methodSignature>passedValidation()</methodSignature>
      <fullMethod>passedValidation()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\IndexRequest</className>
      <methodName>prepareForValidationPagination</methodName>
      <methodSignature>prepareForValidationPagination(): array</methodSignature>
      <fullMethod>prepareForValidationPagination(): array</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\StoreRequest</className>
      <methodName>messages</methodName>
      <methodSignature>messages(): array</methodSignature>
      <fullMethod>messages(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\StoreRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\StoreRequest</className>
      <methodName>prepareForValidation</methodName>
      <methodSignature>prepareForValidation()</methodSignature>
      <fullMethod>prepareForValidation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\UpdateRequest</className>
      <methodName>messages</methodName>
      <methodSignature>messages(): array</methodSignature>
      <fullMethod>messages(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\UpdateRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http\Requests</package>
      <className>Playground\Http\Requests\UpdateRequest</className>
      <methodName>prepareForValidation</methodName>
      <methodSignature>prepareForValidation()</methodSignature>
      <fullMethod>prepareForValidation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http</package>
      <className>Playground\Http\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http</package>
      <className>Playground\Http\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Http</package>
      <className>Playground\Http\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Migrations</className>
      <methodName>defineDatabaseMigrations</methodName>
      <methodSignature>defineDatabaseMigrations()</methodSignature>
      <fullMethod>defineDatabaseMigrations()</fullMethod>
      <crap>7.05</crap>
      <complexity>7</complexity>
      <coverage>90</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Migrations</className>
      <methodName>loadPackageMigrations</methodName>
      <methodSignature>loadPackageMigrations(): void</methodSignature>
      <fullMethod>loadPackageMigrations(): void</fullMethod>
      <crap>6.5</crap>
      <complexity>4</complexity>
      <coverage>46.15</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Migrations</className>
      <methodName>loadMigrationsFromPackages_org</methodName>
      <methodSignature>loadMigrationsFromPackages_org(string $folderForOrganization, string $organization, array $packages): void</methodSignature>
      <fullMethod>loadMigrationsFromPackages_org(string $folderForOrganization, string $organization, array $packages): void</fullMethod>
      <crap>15.25</crap>
      <complexity>8</complexity>
      <coverage>51.61</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Migrations</className>
      <methodName>loadMigrationsFromPackages_migrations</methodName>
      <methodSignature>loadMigrationsFromPackages_migrations(string $folderForOrganizationPackageDatabase, string $organization, string $package, array $migrations): void</methodSignature>
      <fullMethod>loadMigrationsFromPackages_migrations(string $folderForOrganizationPackageDatabase, string $organization, string $package, array $migrations): void</fullMethod>
      <crap>8.74</crap>
      <complexity>4</complexity>
      <coverage>33.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Migrations</className>
      <methodName>loadMigrationsFromPackages</methodName>
      <methodSignature>loadMigrationsFromPackages(string $folderForVendor): void</methodSignature>
      <fullMethod>loadMigrationsFromPackages(string $folderForVendor): void</fullMethod>
      <crap>5.02</crap>
      <complexity>4</complexity>
      <coverage>60</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Migrations</className>
      <methodName>verifyPlaygroundTestExists</methodName>
      <methodSignature>verifyPlaygroundTestExists(): string</methodSignature>
      <fullMethod>verifyPlaygroundTestExists(): string</fullMethod>
      <crap>25.67</crap>
      <complexity>8</complexity>
      <coverage>34.88</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Orchestrating</className>
      <methodName>orchestrateCarbon</methodName>
      <methodSignature>orchestrateCarbon(): void</methodSignature>
      <fullMethod>orchestrateCarbon(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Concerns</package>
      <className>Playground\Test\Concerns\Orchestrating</className>
      <methodName>orchestrateUsers</methodName>
      <methodSignature>orchestrateUsers($app): void</methodSignature>
      <fullMethod>orchestrateUsers($app): void</fullMethod>
      <crap>18.49</crap>
      <complexity>12</complexity>
      <coverage>64.41</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>getStructureCreate</methodName>
      <methodSignature>getStructureCreate(): array</methodSignature>
      <fullMethod>getStructureCreate(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>test_json_guest_cannot_get_create_info</methodName>
      <methodSignature>test_json_guest_cannot_get_create_info()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_create_info()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>test_json_admin_can_get_create_info</methodName>
      <methodSignature>test_json_admin_can_get_create_info()</methodSignature>
      <fullMethod>test_json_admin_can_get_create_info()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateJsonTrait</className>
      <methodName>test_json_get_create_info_as_admin_with_invalid_parameter_and_fail_validation</methodName>
      <methodSignature>test_json_get_create_info_as_admin_with_invalid_parameter_and_fail_validation()</methodSignature>
      <fullMethod>test_json_get_create_info_as_admin_with_invalid_parameter_and_fail_validation()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_guest_cannot_render_create_view</methodName>
      <methodSignature>test_guest_cannot_render_create_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_create_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_admin_can_render_create_view</methodName>
      <methodSignature>test_admin_can_render_create_view()</methodSignature>
      <fullMethod>test_admin_can_render_create_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_admin_can_render_create_view_with_return_url</methodName>
      <methodSignature>test_admin_can_render_create_view_with_return_url()</methodSignature>
      <fullMethod>test_admin_can_render_create_view_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\CreateTrait</className>
      <methodName>test_create_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect</methodName>
      <methodSignature>test_create_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</methodSignature>
      <fullMethod>test_create_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_guest_cannot_destroy</methodName>
      <methodSignature>test_json_guest_cannot_destroy()</methodSignature>
      <fullMethod>test_json_guest_cannot_destroy()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed_with_force_delete</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed_with_force_delete()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed_with_force_delete()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed_with_no_content</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed_with_no_content()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed_with_no_content()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_admin_and_succeed_and_ignore_redirect</methodName>
      <methodSignature>test_json_destroy_as_admin_and_succeed_and_ignore_redirect()</methodSignature>
      <fullMethod>test_json_destroy_as_admin_and_succeed_and_ignore_redirect()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyJsonTrait</className>
      <methodName>test_json_destroy_as_user_and_get_denied_and_no_force_delete_allowed</methodName>
      <methodSignature>test_json_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</methodSignature>
      <fullMethod>test_json_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_guest_cannot_destroy</methodName>
      <methodSignature>test_guest_cannot_destroy()</methodSignature>
      <fullMethod>test_guest_cannot_destroy()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_admin_and_succeed</methodName>
      <methodSignature>test_destroy_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_destroy_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_admin_and_succeed_with_force_delete</methodName>
      <methodSignature>test_destroy_as_admin_and_succeed_with_force_delete()</methodSignature>
      <fullMethod>test_destroy_as_admin_and_succeed_with_force_delete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_admin_and_succeed_with_redirect_to_index_with_trash</methodName>
      <methodSignature>test_destroy_as_admin_and_succeed_with_redirect_to_index_with_trash()</methodSignature>
      <fullMethod>test_destroy_as_admin_and_succeed_with_redirect_to_index_with_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\DestroyTrait</className>
      <methodName>test_destroy_as_user_and_get_denied_and_no_force_delete_allowed</methodName>
      <methodSignature>test_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</methodSignature>
      <fullMethod>test_destroy_as_user_and_get_denied_and_no_force_delete_allowed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>getStructureEdit</methodName>
      <methodSignature>getStructureEdit(): array</methodSignature>
      <fullMethod>getStructureEdit(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>test_json_guest_cannot_get_edit_info</methodName>
      <methodSignature>test_json_guest_cannot_get_edit_info()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_edit_info()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>test_json_admin_can_get_edit_info</methodName>
      <methodSignature>test_json_admin_can_get_edit_info()</methodSignature>
      <fullMethod>test_json_admin_can_get_edit_info()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditJsonTrait</className>
      <methodName>test_json_edit_as_admin_and_fail_validation_with_invalid_parameter</methodName>
      <methodSignature>test_json_edit_as_admin_and_fail_validation_with_invalid_parameter()</methodSignature>
      <fullMethod>test_json_edit_as_admin_and_fail_validation_with_invalid_parameter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_guest_cannot_render_edit_view</methodName>
      <methodSignature>test_guest_cannot_render_edit_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_edit_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_admin_can_render_edit_view</methodName>
      <methodSignature>test_admin_can_render_edit_view()</methodSignature>
      <fullMethod>test_admin_can_render_edit_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_admin_can_render_edit_view_with_return_url</methodName>
      <methodSignature>test_admin_can_render_edit_view_with_return_url()</methodSignature>
      <fullMethod>test_admin_can_render_edit_view_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\EditTrait</className>
      <methodName>test_edit_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect</methodName>
      <methodSignature>test_edit_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</methodSignature>
      <fullMethod>test_edit_view_as_admin_with_invalid_parameter_and_fail_validation_and_redirect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>getStructureIndex</methodName>
      <methodSignature>getStructureIndex(): array</methodSignature>
      <fullMethod>getStructureIndex(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>test_json_guest_cannot_get_index</methodName>
      <methodSignature>test_json_guest_cannot_get_index()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>test_json_admin_can_get_index</methodName>
      <methodSignature>test_json_admin_can_get_index()</methodSignature>
      <fullMethod>test_json_admin_can_get_index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexJsonTrait</className>
      <methodName>test_json_admin_can_get_index_with_filters</methodName>
      <methodSignature>test_json_admin_can_get_index_with_filters()</methodSignature>
      <fullMethod>test_json_admin_can_get_index_with_filters()</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>95</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>test_guest_cannot_render_index_view</methodName>
      <methodSignature>test_guest_cannot_render_index_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_index_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>test_admin_can_render_index_view</methodName>
      <methodSignature>test_admin_can_render_index_view()</methodSignature>
      <fullMethod>test_admin_can_render_index_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\IndexTrait</className>
      <methodName>test_admin_can_render_index_view_with_filters</methodName>
      <methodSignature>test_admin_can_render_index_view_with_filters()</methodSignature>
      <fullMethod>test_admin_can_render_index_view_with_filters()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_guest_cannot_lock</methodName>
      <methodSignature>test_json_guest_cannot_lock()</methodSignature>
      <fullMethod>test_json_guest_cannot_lock()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_lock_as_admin_and_succeed</methodName>
      <methodSignature>test_json_lock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_lock_as_admin_and_succeed()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_lock_as_admin_and_succeed_with_no_redirect</methodName>
      <methodSignature>test_json_lock_as_admin_and_succeed_with_no_redirect()</methodSignature>
      <fullMethod>test_json_lock_as_admin_and_succeed_with_no_redirect()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockJsonTrait</className>
      <methodName>test_json_lock_as_user_and_get_denied</methodName>
      <methodSignature>test_json_lock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_lock_as_user_and_get_denied()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_guest_cannot_lock</methodName>
      <methodSignature>test_guest_cannot_lock()</methodSignature>
      <fullMethod>test_guest_cannot_lock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_lock_as_admin_and_succeed</methodName>
      <methodSignature>test_lock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_lock_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_lock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc</methodName>
      <methodSignature>test_lock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc()</methodSignature>
      <fullMethod>test_lock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_locked_desc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\LockTrait</className>
      <methodName>test_lock_as_user_and_get_denied</methodName>
      <methodSignature>test_lock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_lock_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_guest_cannot_restore</methodName>
      <methodSignature>test_json_guest_cannot_restore()</methodSignature>
      <fullMethod>test_json_guest_cannot_restore()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_restore_as_admin_and_succeed</methodName>
      <methodSignature>test_json_restore_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_restore_as_admin_and_succeed()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_restore_as_admin_and_succeed_with_no_redirect</methodName>
      <methodSignature>test_json_restore_as_admin_and_succeed_with_no_redirect()</methodSignature>
      <fullMethod>test_json_restore_as_admin_and_succeed_with_no_redirect()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreJsonTrait</className>
      <methodName>test_json_restore_as_user_and_get_denied</methodName>
      <methodSignature>test_json_restore_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_restore_as_user_and_get_denied()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_guest_cannot_restore_revision</methodName>
      <methodSignature>test_json_guest_cannot_restore_revision()</methodSignature>
      <fullMethod>test_json_guest_cannot_restore_revision()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_restore_revision_as_admin_and_succeed</methodName>
      <methodSignature>test_json_restore_revision_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_restore_revision_as_admin_and_succeed()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_restore_revision_as_admin_and_succeed_without_redirect</methodName>
      <methodSignature>test_json_restore_revision_as_admin_and_succeed_without_redirect()</methodSignature>
      <fullMethod>test_json_restore_revision_as_admin_and_succeed_without_redirect()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionJsonTrait</className>
      <methodName>test_json_restore_revision_as_user_and_get_denied</methodName>
      <methodSignature>test_json_restore_revision_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_restore_revision_as_user_and_get_denied()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_guest_cannot_restore_revision</methodName>
      <methodSignature>test_guest_cannot_restore_revision()</methodSignature>
      <fullMethod>test_guest_cannot_restore_revision()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_restore_revision_as_admin_and_succeed</methodName>
      <methodSignature>test_restore_revision_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_restore_revision_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_restore_revision_as_admin_and_succeed_with_redirect_to_index_with_only_trash</methodName>
      <methodSignature>test_restore_revision_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</methodSignature>
      <fullMethod>test_restore_revision_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreRevisionTrait</className>
      <methodName>test_restore_revision_as_user_and_get_denied</methodName>
      <methodSignature>test_restore_revision_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_restore_revision_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_guest_cannot_restore</methodName>
      <methodSignature>test_guest_cannot_restore()</methodSignature>
      <fullMethod>test_guest_cannot_restore()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_restore_as_admin_and_succeed</methodName>
      <methodSignature>test_restore_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_restore_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_restore_as_admin_and_succeed_with_redirect_to_index_with_only_trash</methodName>
      <methodSignature>test_restore_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</methodSignature>
      <fullMethod>test_restore_as_admin_and_succeed_with_redirect_to_index_with_only_trash()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RestoreTrait</className>
      <methodName>test_restore_as_user_and_get_denied</methodName>
      <methodSignature>test_restore_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_restore_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>test_json_guest_cannot_render_revision_view</methodName>
      <methodSignature>test_json_guest_cannot_render_revision_view()</methodSignature>
      <fullMethod>test_json_guest_cannot_render_revision_view()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionJsonTrait</className>
      <methodName>test_json_admin_can_get_revision_info</methodName>
      <methodSignature>test_json_admin_can_get_revision_info()</methodSignature>
      <fullMethod>test_json_admin_can_get_revision_info()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getRevisionId</methodName>
      <methodSignature>getRevisionId(): string</methodSignature>
      <fullMethod>getRevisionId(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>getRevisionRouteParameter</methodName>
      <methodSignature>getRevisionRouteParameter(): string</methodSignature>
      <fullMethod>getRevisionRouteParameter(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>test_guest_cannot_render_revision_view</methodName>
      <methodSignature>test_guest_cannot_render_revision_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_revision_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionTrait</className>
      <methodName>test_revision_view_rendered_by_admin</methodName>
      <methodSignature>test_revision_view_rendered_by_admin()</methodSignature>
      <fullMethod>test_revision_view_rendered_by_admin()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>test_json_guest_cannot_get_revisions</methodName>
      <methodSignature>test_json_guest_cannot_get_revisions()</methodSignature>
      <fullMethod>test_json_guest_cannot_get_revisions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>test_json_admin_can_get_revisions</methodName>
      <methodSignature>test_json_admin_can_get_revisions()</methodSignature>
      <fullMethod>test_json_admin_can_get_revisions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsJsonTrait</className>
      <methodName>test_json_admin_can_get_revisions_with_filters</methodName>
      <methodSignature>test_json_admin_can_get_revisions_with_filters()</methodSignature>
      <fullMethod>test_json_admin_can_get_revisions_with_filters()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>getGetFqdnRevision</methodName>
      <methodSignature>getGetFqdnRevision(): string</methodSignature>
      <fullMethod>getGetFqdnRevision(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>test_guest_cannot_render_revisions_view</methodName>
      <methodSignature>test_guest_cannot_render_revisions_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_revisions_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>test_admin_can_render_revisions_view</methodName>
      <methodSignature>test_admin_can_render_revisions_view()</methodSignature>
      <fullMethod>test_admin_can_render_revisions_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\RevisionsTrait</className>
      <methodName>test_admin_can_render_revisions_view_with_filters</methodName>
      <methodSignature>test_admin_can_render_revisions_view_with_filters()</methodSignature>
      <fullMethod>test_admin_can_render_revisions_view_with_filters()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>test_json_guest_cannot_see_info</methodName>
      <methodSignature>test_json_guest_cannot_see_info()</methodSignature>
      <fullMethod>test_json_guest_cannot_see_info()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowJsonTrait</className>
      <methodName>test_json_show_info_for_admin</methodName>
      <methodSignature>test_json_show_info_for_admin()</methodSignature>
      <fullMethod>test_json_show_info_for_admin()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>test_guest_cannot_render_show_view</methodName>
      <methodSignature>test_guest_cannot_render_show_view()</methodSignature>
      <fullMethod>test_guest_cannot_render_show_view()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\ShowTrait</className>
      <methodName>test_show_view_rendered_by_admin</methodName>
      <methodSignature>test_show_view_rendered_by_admin()</methodSignature>
      <fullMethod>test_show_view_rendered_by_admin()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>test_json_guest_cannot_store</methodName>
      <methodSignature>test_json_guest_cannot_store()</methodSignature>
      <fullMethod>test_json_guest_cannot_store()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>test_json_store_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_json_store_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_json_store_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreJsonTrait</className>
      <methodName>test_json_store_as_admin_and_succeed</methodName>
      <methodSignature>test_json_store_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_store_as_admin_and_succeed()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_guest_cannot_store</methodName>
      <methodSignature>test_guest_cannot_store()</methodSignature>
      <fullMethod>test_guest_cannot_store()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_store_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_store_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_store_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_store_as_admin_and_succeed</methodName>
      <methodSignature>test_store_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_store_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\StoreTrait</className>
      <methodName>test_store_as_admin_and_succeed_with_return_url</methodName>
      <methodSignature>test_store_as_admin_and_succeed_with_return_url()</methodSignature>
      <fullMethod>test_store_as_admin_and_succeed_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_guest_cannot_unlock</methodName>
      <methodSignature>test_json_guest_cannot_unlock()</methodSignature>
      <fullMethod>test_json_guest_cannot_unlock()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_unlock_as_admin_and_succeed</methodName>
      <methodSignature>test_json_unlock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_json_unlock_as_admin_and_succeed()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_unlock_as_admin_and_succeed_with_no_redirect</methodName>
      <methodSignature>test_json_unlock_as_admin_and_succeed_with_no_redirect()</methodSignature>
      <fullMethod>test_json_unlock_as_admin_and_succeed_with_no_redirect()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockJsonTrait</className>
      <methodName>test_json_unlock_as_user_and_get_denied</methodName>
      <methodSignature>test_json_unlock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_json_unlock_as_user_and_get_denied()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>getStructureData</methodName>
      <methodSignature>getStructureData(): array</methodSignature>
      <fullMethod>getStructureData(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_guest_cannot_unlock</methodName>
      <methodSignature>test_guest_cannot_unlock()</methodSignature>
      <fullMethod>test_guest_cannot_unlock()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_unlock_as_admin_and_succeed</methodName>
      <methodSignature>test_unlock_as_admin_and_succeed()</methodSignature>
      <fullMethod>test_unlock_as_admin_and_succeed()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_unlock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc</methodName>
      <methodSignature>test_unlock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc()</methodSignature>
      <fullMethod>test_unlock_as_admin_and_succeed_with_redirect_to_index_with_sorted_by_unlocked_desc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UnlockTrait</className>
      <methodName>test_unlock_as_user_and_get_denied</methodName>
      <methodSignature>test_unlock_as_user_and_get_denied()</methodSignature>
      <fullMethod>test_unlock_as_user_and_get_denied()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>test_json_guest_cannot_update</methodName>
      <methodSignature>test_json_guest_cannot_update()</methodSignature>
      <fullMethod>test_json_guest_cannot_update()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>test_json_update_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_json_update_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_json_update_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateJsonTrait</className>
      <methodName>test_json_admin_can_update</methodName>
      <methodSignature>test_json_admin_can_update()</methodSignature>
      <fullMethod>test_json_admin_can_update()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>getGetFqdn</methodName>
      <methodSignature>getGetFqdn(): string</methodSignature>
      <fullMethod>getGetFqdn(): string</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>getPackageInfo</methodName>
      <methodSignature>getPackageInfo(): array</methodSignature>
      <fullMethod>getPackageInfo(): array</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_guest_cannot_update</methodName>
      <methodSignature>test_guest_cannot_update()</methodSignature>
      <fullMethod>test_guest_cannot_update()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_update_as_admin_without_payload_and_fail_validation</methodName>
      <methodSignature>test_update_as_admin_without_payload_and_fail_validation()</methodSignature>
      <fullMethod>test_update_as_admin_without_payload_and_fail_validation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_admin_can_update</methodName>
      <methodSignature>test_admin_can_update()</methodSignature>
      <fullMethod>test_admin_can_update()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Http\Controllers\Resource\Playground</package>
      <className>Playground\Test\Feature\Http\Controllers\Resource\Playground\UpdateTrait</className>
      <methodName>test_admin_can_update_view_with_return_url</methodName>
      <methodSignature>test_admin_can_update_view_with_return_url()</methodSignature>
      <fullMethod>test_admin_can_update_view_with_return_url()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>getModel</methodName>
      <methodSignature>getModel(): Illuminate\Database\Eloquent\Model</methodSignature>
      <fullMethod>getModel(): Illuminate\Database\Eloquent\Model</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>getModelClass</methodName>
      <methodSignature>getModelClass(): string</methodSignature>
      <fullMethod>getModelClass(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>test_model_instance</methodName>
      <methodSignature>test_model_instance(): void</methodSignature>
      <fullMethod>test_model_instance(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationship</methodName>
      <methodSignature>verifyRelationship(string $relationshipType, string $accessor): bool</methodSignature>
      <fullMethod>verifyRelationship(string $relationshipType, string $accessor): bool</fullMethod>
      <crap>26.98</crap>
      <complexity>16</complexity>
      <coverage>65</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationships</methodName>
      <methodSignature>verifyRelationships(): array</methodSignature>
      <fullMethod>verifyRelationships(): array</fullMethod>
      <crap>7.33</crap>
      <complexity>6</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationshipHasOne</methodName>
      <methodSignature>verifyRelationshipHasOne(Illuminate\Database\Eloquent\Model $model, string $accessor): void</methodSignature>
      <fullMethod>verifyRelationshipHasOne(Illuminate\Database\Eloquent\Model $model, string $accessor): void</fullMethod>
      <crap>18</crap>
      <complexity>18</complexity>
      <coverage>98.55</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>verifyRelationshipHasMany</methodName>
      <methodSignature>verifyRelationshipHasMany(Illuminate\Database\Eloquent\Model $model, string $accessor): void</methodSignature>
      <fullMethod>verifyRelationshipHasMany(Illuminate\Database\Eloquent\Model $model, string $accessor): void</fullMethod>
      <crap>15</crap>
      <complexity>15</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>test_verify_model_relationships</methodName>
      <methodSignature>test_verify_model_relationships(): void</methodSignature>
      <fullMethod>test_verify_model_relationships(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Feature\Models</package>
      <className>Playground\Test\Feature\Models\ModelCase</className>
      <methodName>test_factory_create</methodName>
      <methodSignature>test_factory_create(): void</methodSignature>
      <fullMethod>test_factory_create(): void</fullMethod>
      <crap>4.01</crap>
      <complexity>4</complexity>
      <coverage>92.31</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>mockRequest</methodName>
      <methodSignature>mockRequest(string $requestClass, string $uri, string $method, array $parameters, array $cookies, array $files, array $server, $content)</methodSignature>
      <fullMethod>mockRequest(string $requestClass, string $uri, string $method, array $parameters, array $cookies, array $files, array $server, $content)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>invokeProtected</methodName>
      <methodSignature>invokeProtected($out, $method, array $params): mixed</methodSignature>
      <fullMethod>invokeProtected($out, $method, array $params): mixed</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\MockingTrait</className>
      <methodName>setProtected</methodName>
      <methodSignature>setProtected($out, string $property, mixed $value): void</methodSignature>
      <fullMethod>setProtected($out, string $property, mixed $value): void</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\AbstractUser</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>getAttribute</methodName>
      <methodSignature>getAttribute($key)</methodSignature>
      <fullMethod>getAttribute($key)</fullMethod>
      <crap>0</crap>
      <complexity>0</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(mixed $privilege, bool $inclusive): bool</methodSignature>
      <fullMethod>hasPrivilege(mixed $privilege, bool $inclusive): bool</fullMethod>
      <crap>4.25</crap>
      <complexity>4</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $roles, bool $inclusive): bool</methodSignature>
      <fullMethod>hasRole(mixed $roles, bool $inclusive): bool</fullMethod>
      <crap>41.98</crap>
      <complexity>13</complexity>
      <coverage>44.44</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models\Concerns</package>
      <className>Playground\Test\Models\Concerns\UserPrivileges</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\DefaultUser</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\Demo</className>
      <methodName>widgets</methodName>
      <methodSignature>widgets(): Illuminate\Database\Eloquent\Relations\HasMany</methodSignature>
      <fullMethod>widgets(): Illuminate\Database\Eloquent\Relations\HasMany</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithRole</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $roles): bool</methodSignature>
      <fullMethod>hasRole(mixed $roles): bool</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\UserWithRole</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Models</package>
      <className>Playground\Test\Models\Widget</className>
      <methodName>demo</methodName>
      <methodSignature>demo(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>demo(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\OrchestraTestCase</className>
      <methodName>setUp</methodName>
      <methodSignature>setUp(): void</methodSignature>
      <fullMethod>setUp(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\OrchestraTestCase</className>
      <methodName>defineEnvironment</methodName>
      <methodSignature>defineEnvironment($app)</methodSignature>
      <fullMethod>defineEnvironment($app)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot()</methodSignature>
      <fullMethod>boot()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(): void</methodSignature>
      <fullMethod>about(): void</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\ServiceProvider</className>
      <methodName>version</methodName>
      <methodSignature>version(): string</methodSignature>
      <fullMethod>version(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\SqlTrait</className>
      <methodName>setUp</methodName>
      <methodSignature>setUp(): void</methodSignature>
      <fullMethod>setUp(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\SqlTrait</className>
      <methodName>replace_quotes</methodName>
      <methodSignature>replace_quotes(string $sql): string</methodSignature>
      <fullMethod>replace_quotes(string $sql): string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>getRequest</methodName>
      <methodSignature>getRequest(): Illuminate\Foundation\Http\FormRequest</methodSignature>
      <fullMethod>getRequest(): Illuminate\Foundation\Http\FormRequest</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>getRequestClass</methodName>
      <methodSignature>getRequestClass(): string</methodSignature>
      <fullMethod>getRequestClass(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Http\Requests</package>
      <className>Playground\Test\Unit\Http\Requests\RequestCase</className>
      <methodName>test_request_instance</methodName>
      <methodSignature>test_request_instance(): void</methodSignature>
      <fullMethod>test_request_instance(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>getModel</methodName>
      <methodSignature>getModel(): Illuminate\Database\Eloquent\Model</methodSignature>
      <fullMethod>getModel(): Illuminate\Database\Eloquent\Model</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>getModelClass</methodName>
      <methodSignature>getModelClass(): string</methodSignature>
      <fullMethod>getModelClass(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_model_instance</methodName>
      <methodSignature>test_model_instance(): void</methodSignature>
      <fullMethod>test_model_instance(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>verifyRelationship</methodName>
      <methodSignature>verifyRelationship(string $relationshipType, string $accessor): bool</methodSignature>
      <fullMethod>verifyRelationship(string $relationshipType, string $accessor): bool</fullMethod>
      <crap>17.57</crap>
      <complexity>10</complexity>
      <coverage>57.69</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>verifyRelationships</methodName>
      <methodSignature>verifyRelationships(): array</methodSignature>
      <fullMethod>verifyRelationships(): array</fullMethod>
      <crap>9.29</crap>
      <complexity>7</complexity>
      <coverage>64</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_verify_model_relationships</methodName>
      <methodSignature>test_verify_model_relationships(): void</methodSignature>
      <fullMethod>test_verify_model_relationships(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test\Unit\Models</package>
      <className>Playground\Test\Unit\Models\ModelCase</className>
      <methodName>test_model_factory_make</methodName>
      <methodSignature>test_model_factory_make(): void</methodSignature>
      <fullMethod>test_model_factory_make(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Test</package>
      <className>Playground\Test\WithFaker</className>
      <methodName>faker</methodName>
      <methodSignature>faker(string $locale): Faker\Generator</methodSignature>
      <fullMethod>faker(string $locale): Faker\Generator</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Abilities</className>
      <methodName>hasAbility</methodName>
      <methodSignature>hasAbility(mixed $ability): bool</methodSignature>
      <fullMethod>hasAbility(mixed $ability): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Abilities</className>
      <methodName>addAbility</methodName>
      <methodSignature>addAbility(mixed $ability): void</methodSignature>
      <fullMethod>addAbility(mixed $ability): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Abilities</className>
      <methodName>removeAbility</methodName>
      <methodSignature>removeAbility(mixed $ability): void</methodSignature>
      <fullMethod>removeAbility(mixed $ability): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Admin</className>
      <methodName>isAdmin</methodName>
      <methodSignature>isAdmin(): bool</methodSignature>
      <fullMethod>isAdmin(): bool</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Privileges</className>
      <methodName>hasPrivilege</methodName>
      <methodSignature>hasPrivilege(mixed $privilege): bool</methodSignature>
      <fullMethod>hasPrivilege(mixed $privilege): bool</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Privileges</className>
      <methodName>addPrivilege</methodName>
      <methodSignature>addPrivilege(mixed $privilege): void</methodSignature>
      <fullMethod>addPrivilege(mixed $privilege): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Privileges</className>
      <methodName>removePrivilege</methodName>
      <methodSignature>removePrivilege(mixed $privilege): void</methodSignature>
      <fullMethod>removePrivilege(mixed $privilege): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Role</className>
      <methodName>hasRole</methodName>
      <methodSignature>hasRole(mixed $role): bool</methodSignature>
      <fullMethod>hasRole(mixed $role): bool</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Role</className>
      <methodName>addRole</methodName>
      <methodSignature>addRole(mixed $role): void</methodSignature>
      <fullMethod>addRole(mixed $role): void</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\Role</className>
      <methodName>removeRole</methodName>
      <methodSignature>removeRole(mixed $role): void</methodSignature>
      <fullMethod>removeRole(mixed $role): void</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithChildren</className>
      <methodName>children</methodName>
      <methodSignature>children(): Illuminate\Database\Eloquent\Relations\HasMany</methodSignature>
      <fullMethod>children(): Illuminate\Database\Eloquent\Relations\HasMany</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithCreator</className>
      <methodName>creator</methodName>
      <methodSignature>creator(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>creator(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithModifier</className>
      <methodName>modifier</methodName>
      <methodSignature>modifier(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>modifier(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithOwner</className>
      <methodName>owner</methodName>
      <methodSignature>owner(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>owner(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Concerns</package>
      <className>Playground\Models\Concerns\WithParent</className>
      <methodName>parent</methodName>
      <methodSignature>parent(): Illuminate\Database\Eloquent\Relations\HasOne</methodSignature>
      <fullMethod>parent(): Illuminate\Database\Eloquent\Relations\HasOne</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterColumns</className>
      <methodName>scopeFilterColumns</methodName>
      <methodSignature>scopeFilterColumns(Illuminate\Database\Eloquent\Builder $query, array $columns, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterColumns(Illuminate\Database\Eloquent\Builder $query, array $columns, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>31</crap>
      <complexity>31</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterDates</className>
      <methodName>scopeFilterDates</methodName>
      <methodSignature>scopeFilterDates(Illuminate\Database\Eloquent\Builder $query, array $dates, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterDates(Illuminate\Database\Eloquent\Builder $query, array $dates, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>43</crap>
      <complexity>43</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterFlags</className>
      <methodName>scopeFilterFlags</methodName>
      <methodSignature>scopeFilterFlags(Illuminate\Database\Eloquent\Builder $query, array $flags, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterFlags(Illuminate\Database\Eloquent\Builder $query, array $flags, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>9</crap>
      <complexity>9</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterIds</className>
      <methodName>scopeFilterIds</methodName>
      <methodSignature>scopeFilterIds(Illuminate\Database\Eloquent\Builder $query, array $ids, array $validated): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterIds(Illuminate\Database\Eloquent\Builder $query, array $ids, array $validated): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>27</crap>
      <complexity>27</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeFilterTrash</className>
      <methodName>scopeFilterTrash</methodName>
      <methodSignature>scopeFilterTrash(Illuminate\Database\Eloquent\Builder $query, string $visibility): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeFilterTrash(Illuminate\Database\Eloquent\Builder $query, string $visibility): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models\Scopes</package>
      <className>Playground\Models\Scopes\ScopeSort</className>
      <methodName>scopeSort</methodName>
      <methodSignature>scopeSort(Illuminate\Database\Eloquent\Builder $query, mixed $sort): Illuminate\Database\Eloquent\Builder</methodSignature>
      <fullMethod>scopeSort(Illuminate\Database\Eloquent\Builder $query, mixed $sort): Illuminate\Database\Eloquent\Builder</fullMethod>
      <crap>16</crap>
      <complexity>16</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground\Models</package>
      <className>Playground\Models\User</className>
      <methodName>casts</methodName>
      <methodSignature>casts(): array</methodSignature>
      <fullMethod>casts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>publishMigrations</methodName>
      <methodSignature>publishMigrations(): void</methodSignature>
      <fullMethod>publishMigrations(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>about</methodName>
      <methodSignature>about(array $config): void</methodSignature>
      <fullMethod>about(array $config): void</fullMethod>
      <crap>24</crap>
      <complexity>24</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>userPrimaryKeyType</methodName>
      <methodSignature>userPrimaryKeyType(string $auth_providers_users_model): string</methodSignature>
      <fullMethod>userPrimaryKeyType(string $auth_providers_users_model): string</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>userPrimaryKeyTypeParse</methodName>
      <methodSignature>userPrimaryKeyTypeParse(string $auth_providers_users_model): string</methodSignature>
      <fullMethod>userPrimaryKeyTypeParse(string $auth_providers_users_model): string</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Playground</package>
      <className>Playground\ServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
